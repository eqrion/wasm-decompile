module {

func 0() {
  i0: i32
  i1: i32
  i2: i32
  i3: i32
  i4: i32
  i5: i32
  i6: i32
  i7: i32
  i8: i32
  i9: i32
  i10: i32
  i11: i32
  i12: i32
  i13: i32
  i14: i32
  i15: i32
  i16: i32
  i17: i32
  i18: i32
  temp0: i32
  temp1: i32
  temp2: i32
  temp3: i32
  temp4: i32

  i0 = memory[404]
  i1 = memory[400] << 2
  i2 = 256
  i3 = -1
  br @1

@1:
  br @2

@2:
  temp0 = memory[i2]
  temp1 = i4
  i4 = memory[i2]
  i5 = temp0 - temp1
  temp2 = i10
  i10 = memory[i1]
  if eqz(temp2)
     br @37
  br @3

@3:
  br @4

@4:
  br @5

@5:
  if i9 >=_u i10
     br @23
  br @6

@6:
  if bottom
     br @8
  br @7

@7:
  br @16

@8:
  if i14 <=_u 4
     br @10
  br @9

@9:
  i15 = i0 + memory[i13]
  br @11

@10:
  i15 = i13 + 4
  br @11

@11:
  temp3 = i16
  i16 = i4
  i18 = temp3 + i5
  i17 = i15
  br @12

@12:
  br @13

@13:
  temp4 = i11
  i11 = memory[i16] - memory[i17]
  if temp4
     br @15
  br @14

@14:
  unknown

@15:
  br @16

@16:
  if bottom
     br @22
  br @17

@17:
  br @18

@18:
  if bottom
     br @21
  br @19

@19:
  br @20

@20:
  unknown

@21:
  i9 = i12 + 1
  br @5

@22:
  i10 = i12
  br @5

@23:
  if bottom
     br @35
  br @24

@24:
  br @25

@25:
  if bottom
     br @31
  br @26

@26:
  br @27

@27:
  if bottom
     br @29
  br @28

@28:
  br @30

@29:
  i3 = i2
  br @30

@30:
  unknown

@31:
  if i2 >_u 256
     br @34
  br @32

@32:
  br @33

@33:
  br @37

@34:
  return i2 + -2

@35:
  if memory[i7] != 42
     br @37
  br @36

@36:
  unknown

@37:
  return i3
}

}

